(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{286:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("本文用于归纳在学习Spring框架过程中遇到的难点。")]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul")]),r("p"),t._v(" "),r("h1",{attrs:{id:"控制反转ioc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#控制反转ioc","aria-hidden":"true"}},[t._v("#")]),t._v(" 控制反转IoC")]),t._v(" "),r("p",[t._v("解释：")]),t._v(" "),r("ol",[r("li",[t._v("控制反转是把对象的依赖管理从内部转移到外部（由核心容器决定）。")]),t._v(" "),r("li",[t._v("依赖对象获得被反转。")])]),t._v(" "),r("p",[t._v("对比：传统方式的依赖关系")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/acrx016/myImage/master/JavaEE%20SSM/2019/09/08/%E4%BC%A0%E7%BB%9F%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB-1567937193719.png",alt:"title"}})]),t._v(" "),r("p",[t._v("使用IoC容器后，客户端不再主动创建这些对象，耦合度降低")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://raw.githubusercontent.com/acrx016/myImage/master/JavaEE%20SSM/2019/09/08/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%ACIoC-1567937307342.png",alt:"title"}})]),t._v(" "),r("h1",{attrs:{id:"依赖注入di"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#依赖注入di","aria-hidden":"true"}},[t._v("#")]),t._v(" 依赖注入DI")]),t._v(" "),r("p",[t._v("两种方法：")]),t._v(" "),r("ol",[r("li",[t._v("通过实例化JavaBean，调用其setter方法注入，叫设值方法注入(Setter Injection);")]),t._v(" "),r("li",[t._v("通过对象的构造函数传入参数注入，叫构造器注入（Construction Injection）。")])]),t._v(" "),r("p",[t._v("通过IoC容器可以自动实现将对象所需依赖注入类中。")]),t._v(" "),r("h1",{attrs:{id:"spring的核心容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring的核心容器","aria-hidden":"true"}},[t._v("#")]),t._v(" Spring的核心容器")])])},[],!1,null,null,null);a.default=s.exports}}]);